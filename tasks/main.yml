---
# tasks file for dns
- name: install dns
  package:
    name: "{{ dns_packages }}"
    state: "{{ dns_package_state }}"
  register: dns_install_dns
  until: dns_install_dns is succeeded
  retries: 3

- name: create directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ dns_owner }}"
    group: "{{ dns_group }}"
  with_items:
    - "{{ dns_datadir }}"
    - "{{ dns_confdir }}"

- name: create group
  group:
    name: "{{ dns_group }}"
    state: present

- name: create user
  user:
    name: "{{ dns_owner }}"
    state: present
    system: yes

- name: generate rndc key
  command: rndc-confgen -a -c "{{ dns_confdir }}/rndc.key"
  args:
    creates: "{{ dns_confdir }}/rndc.key"

- name: set permissions on rndc key file
  file:
    path: "{{ dns_confdir }}/rndc.key"
    owner: "{{ dns_owner }}"
    group: "{{ dns_group }}"

- name: get most recent version of the hints/root file
  get_url:
    url: https://www.internic.net/domain/named.root
    dest: "{{ dns_datadir }}/named.root"
  when:
    - dns_caching_dns
  notify:
    reload zones

- name: create zone files
  template:
    src: zone.j2
    dest: "{{ dns_datadir }}/{{ item.name }}.conf"
  with_items:
    - "{{ dns_zones }}"
  notify:
    reload zones
  loop_control:
    label: "{{ item.name }}"

- name: add zones to configuration
  template:
    src: named.conf.j2
    dest: "{{ dns_confdir }}/named.conf"
    validate: named-checkconf -zj %s
  notify:
    reload configuration

- name: start and enable dns
  service:
    name: "{{ dns_service }}"
    state: started
    enabled: yes
  when:
    - ansible_virtualization_type != "docker" or dns_ignore_docker
